name: Artifacts native build and upload

on:
  push:
    branches: [ "dev" ]
  release:
    types: [published]

    
defaults:
  run:
    working-directory: schedular

jobs:
  build:
    name: Build artifact ${{ matrix.asset_name }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: linux-amd64
            executable-suffix: ''
          - os: macos-latest
            asset_name: macos-amd64
            executable-suffix: ''
          - os: windows-latest
            asset_name: windows-amd64
            executable-suffix: '.exe'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          java-version: '21'
          distribution: 'graalvm'
          components: native-image
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - name: Build artifact
        run: mvn -Pnative native:compile -DskipTests=true
      
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          path: target/schedule
      
       # Setup Container build action
      - name: Set up Container Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      # Login to GitHub Registry
      # Comment out if you're pushing to OCIR
      - name: Login to Github Packages
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build image and push to GitHub Container Registry
        uses: docker/build-push-action@v3
        with:
          # Relative path to the place where source code with Dockerfile is located
          context: ./
          # Note: tags has to be all lower-case
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}