name: Artifacts native build and upload

on:
  # push:
  #   branches: [ "dev" ]
  release:
    types: [published]

    
defaults:
  run:
    working-directory: schedular

jobs:
  build:
    name: Build artifact ${{ matrix.asset_name }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            asset_name: linux-amd64
            executable-suffix: ''
          - os: macos-latest
            asset_name: macos-amd64
            executable-suffix: ''
          - os: windows-latest
            asset_name: windows-amd64
            executable-suffix: '.exe'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: latest
          java-version: '21'
          distribution: 'graalvm'
          components: native-image
          github-token: ${{ secrets.GITHUB_TOKEN }}
          native-image-job-reports: 'true'

      - uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build artifact
        run: ./mvnw -Pnative native:compile -DskipTests=true #./mvnw clean package -DskipTests=true
      

      - name: Upload artifact to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ github.workspace }}/schedular/target/${{ matrix.executable-suffix }}
          asset_name: ${{ github.event.repository.name }}-${{ github.ref_name }}-${{ matrix.asset_name }}${{ matrix.executable-suffix }}
          tag: ${{ github.ref }}