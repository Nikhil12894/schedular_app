# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "main" ]

defaults:
  run:
    working-directory: schedular

jobs:
  native-image-compile-on-host:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Cache SDKMAN installation
      uses: actions/cache@v3
      with:
        path: ~/.sdkman
        key: ${{ runner.os }}-sdkman-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-sdkman-

  #   - name: Install GraalVM with SDKMAN
  #     run: |
  #       curl -s "https://get.sdkman.io" | bash
  #       source "$HOME/.sdkman/bin/sdkman-init.sh"
  #       sdk install java 21.0.2-graalce
  #       java -version

  #   # - name: Install GraalVM Native Image
  #   #   run: |
  #   #     source "$HOME/.sdkman/bin/sdkman-init.sh"
  #   #     gu install native-image
  #   #     native-image --version

  #   - name: Install Maven, that uses GraalVM for later builds
  #     run: |
  #       source "$HOME/.sdkman/bin/sdkman-init.sh"
  #       sdk install maven
  #       mvn --version

  #   - name: Run GraalVM Native Image compilation of Spring Boot App (Maven version instead of ./compile.sh)
  #     run: |
  #       source "$HOME/.sdkman/bin/sdkman-init.sh"
  #       mvn -B clean package -P native
  # native-image-compile-in-docker:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Push to Docker Hub also, since automatic Builds there dont have anough RAM to do a docker build
  #       run: |
  #         echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
  #         docker push nikhil12894/schedule-graalvm:latest

    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6



  # - name: Upload artifact for deployment job
      #   uses: actions/upload-artifact@v4
      #   with:
      #     name: binary-${{ matrix.os }}-${{ matrix.asset_name }}
      #     path: ${{ github.workspace }}/schedular/target/
      #     overwrite: true